// automatically generated by the FlatBuffers compiler, do not modify

package com.xiaomi.cube.book.Book;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Book extends Table {
  public static Book getRootAsBook(ByteBuffer _bb) { return getRootAsBook(_bb, new Book()); }
  public static Book getRootAsBook(ByteBuffer _bb, Book obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Book __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public IScore similarBook(int j) { return similarBook(new IScore(), j); }
  public IScore similarBook(IScore obj, int j) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o) + j * 16, bb) : null; }
  public int similarBookLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public SScore userScore(int j) { return userScore(new SScore(), j); }
  public SScore userScore(SScore obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int userScoreLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

  public static int createBook(FlatBufferBuilder builder,
      int idOffset,
      int similarBookOffset,
      int userScoreOffset) {
    builder.startObject(3);
    Book.addUserScore(builder, userScoreOffset);
    Book.addSimilarBook(builder, similarBookOffset);
    Book.addId(builder, idOffset);
    return Book.endBook(builder);
  }

  public static void startBook(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addSimilarBook(FlatBufferBuilder builder, int similarBookOffset) { builder.addOffset(1, similarBookOffset, 0); }
  public static void startSimilarBookVector(FlatBufferBuilder builder, int numElems) { builder.startVector(16, numElems, 8); }
  public static void addUserScore(FlatBufferBuilder builder, int userScoreOffset) { builder.addOffset(2, userScoreOffset, 0); }
  public static int createUserScoreVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startUserScoreVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endBook(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishBookBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

